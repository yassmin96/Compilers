PARSING : int : METHOD_BODY  --->  int id ; STATEMENT_LIST##  
MATCHING INPUT: int
MATCHING INPUT: id
MATCHING INPUT: ;
PARSING : while : STATEMENT_LIST##  --->  STATEMENT STATEMENT_LIST##  
PARSING : while : STATEMENT  --->  while ( EXPRESSION ) { STATEMENT }  
MATCHING INPUT: while
MATCHING INPUT: (
PARSING : id : EXPRESSION  --->  id idEXPRESSION##  
MATCHING INPUT: id
PARSING : relop : idEXPRESSION##  --->  TERM## TERM##idEXPRESSION####  
PARSING : relop : TERM##  --->  \L  
PARSING : relop : TERM##idEXPRESSION####  --->  SIMPLE_EXPRESSION## SIMPLE_EXPRESSION##TERM##idEXPRESSION######  
PARSING : relop : SIMPLE_EXPRESSION##  --->  \L  
PARSING : relop : SIMPLE_EXPRESSION##TERM##idEXPRESSION######  --->  relop SIMPLE_EXPRESSION  
MATCHING INPUT: relop
PARSING : num : SIMPLE_EXPRESSION  --->  num TERM## SIMPLE_EXPRESSION##  
MATCHING INPUT: num
PARSING : ) : TERM##  --->  \L  
PARSING : ) : SIMPLE_EXPRESSION##  --->  \L  
MATCHING INPUT: )
MATCHING INPUT: {
PARSING : id : STATEMENT  --->  id assign EXPRESSION ;  
MATCHING INPUT: id
MATCHING INPUT: assign
PARSING : id : EXPRESSION  --->  id idEXPRESSION##  
MATCHING INPUT: id
PARSING : addop : idEXPRESSION##  --->  TERM## TERM##idEXPRESSION####  
PARSING : addop : TERM##  --->  \L  
PARSING : addop : TERM##idEXPRESSION####  --->  SIMPLE_EXPRESSION## SIMPLE_EXPRESSION##TERM##idEXPRESSION######  
PARSING : addop : SIMPLE_EXPRESSION##  --->  addop TERM SIMPLE_EXPRESSION##  
MATCHING INPUT: addop
PARSING : num : TERM  --->  num TERM##  
MATCHING INPUT: num
PARSING : ; : TERM##  --->  \L  
PARSING : ; : SIMPLE_EXPRESSION##  --->  \L  
PARSING : ; : SIMPLE_EXPRESSION##TERM##idEXPRESSION######  --->  \L  
MATCHING INPUT: ;
ERROR: missing  }  ,inserted  in Line: 24
PARSING : if : STATEMENT_LIST##  --->  STATEMENT STATEMENT_LIST##  
PARSING : if : STATEMENT  --->  if ( EXPRESSION ) { STATEMENT } else { STATEMENT }  
MATCHING INPUT: if
MATCHING INPUT: (
PARSING : id : EXPRESSION  --->  id idEXPRESSION##  
MATCHING INPUT: id
PARSING : relop : idEXPRESSION##  --->  TERM## TERM##idEXPRESSION####  
PARSING : relop : TERM##  --->  \L  
PARSING : relop : TERM##idEXPRESSION####  --->  SIMPLE_EXPRESSION## SIMPLE_EXPRESSION##TERM##idEXPRESSION######  
PARSING : relop : SIMPLE_EXPRESSION##  --->  \L  
PARSING : relop : SIMPLE_EXPRESSION##TERM##idEXPRESSION######  --->  relop SIMPLE_EXPRESSION  
MATCHING INPUT: relop
PARSING : num : SIMPLE_EXPRESSION  --->  num TERM## SIMPLE_EXPRESSION##  
MATCHING INPUT: num
PARSING : ) : TERM##  --->  \L  
PARSING : ) : SIMPLE_EXPRESSION##  --->  \L  
MATCHING INPUT: )
ERROR: missing  {  ,inserted  in Line: 35
ERROR: illegal, discard  )  in Line: 35
ERROR: illegal, discard  {  in Line: 35
PARSING : id : STATEMENT  --->  id assign EXPRESSION ;  
MATCHING INPUT: id
MATCHING INPUT: assign
PARSING : id : EXPRESSION  --->  id idEXPRESSION##  
MATCHING INPUT: id
PARSING : addop : idEXPRESSION##  --->  TERM## TERM##idEXPRESSION####  
PARSING : addop : TERM##  --->  \L  
PARSING : addop : TERM##idEXPRESSION####  --->  SIMPLE_EXPRESSION## SIMPLE_EXPRESSION##TERM##idEXPRESSION######  
PARSING : addop : SIMPLE_EXPRESSION##  --->  addop TERM SIMPLE_EXPRESSION##  
MATCHING INPUT: addop
PARSING : num : TERM  --->  num TERM##  
MATCHING INPUT: num
PARSING : ; : TERM##  --->  \L  
PARSING : ; : SIMPLE_EXPRESSION##  --->  \L  
PARSING : ; : SIMPLE_EXPRESSION##TERM##idEXPRESSION######  --->  \L  
MATCHING INPUT: ;
MATCHING INPUT: }
MATCHING INPUT: else
MATCHING INPUT: {
PARSING : id : STATEMENT  --->  id assign EXPRESSION ;  
MATCHING INPUT: id
MATCHING INPUT: assign
PARSING : id : EXPRESSION  --->  id idEXPRESSION##  
MATCHING INPUT: id
PARSING : addop : idEXPRESSION##  --->  TERM## TERM##idEXPRESSION####  
PARSING : addop : TERM##  --->  \L  
PARSING : addop : TERM##idEXPRESSION####  --->  SIMPLE_EXPRESSION## SIMPLE_EXPRESSION##TERM##idEXPRESSION######  
PARSING : addop : SIMPLE_EXPRESSION##  --->  addop TERM SIMPLE_EXPRESSION##  
MATCHING INPUT: addop
PARSING : id : TERM  --->  id TERM##  
MATCHING INPUT: id
PARSING : ; : TERM##  --->  \L  
PARSING : ; : SIMPLE_EXPRESSION##  --->  \L  
PARSING : ; : SIMPLE_EXPRESSION##TERM##idEXPRESSION######  --->  \L  
MATCHING INPUT: ;
MATCHING INPUT: }
PARSING : $ : STATEMENT_LIST##  --->  \L  
MATCHING INPUT: $
